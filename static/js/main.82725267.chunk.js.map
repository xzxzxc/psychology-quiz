{"version":3,"sources":["logo.svg","quizStorrage.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["QuizStorrage","title","description","groups","name","questions","number","value","App","answers","test","flatMap","g","sort","q","map","question","className","answer","role","ans_val","type","autoComplete","id","onClick","htmlFor","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,G,MAAA,IAA0B,kC,sBCoB5BA,EAAb,uFACE,WACE,MAAO,CACLC,MAAO,aACPC,YAAa,aACbC,OAAQ,CACN,CACEC,KAAM,UACNC,UAAW,CACT,CACEC,OAAQ,EACRC,MAAO,WAET,CACED,OAAQ,EACRC,MAAO,cAIb,CACEH,KAAM,UACNC,UAAW,CACT,CACEC,OAAQ,EACRC,MAAO,WAET,CACED,OAAQ,EACRC,MAAO,oBA5BrB,K,OC2CeC,MA1Df,WACE,IACMC,EADOT,EAAaU,KACLP,OAClBQ,SAAQ,SAACC,GAAD,OAAOA,EAAEP,aACjBQ,MAAK,SAACC,GAAD,OAAOA,EAAER,UACdS,KAAc,SAACD,GAAD,MAAQ,CACrBE,SAAUF,MAGd,OACE,sBAAKG,UAAU,MAAf,UACGR,EAAQM,KAAI,SAACG,GAAD,OACX,sBACED,UAAU,+DADZ,UAIE,+BACGC,EAAOF,SAASV,OADnB,KAC6BY,EAAOF,SAAST,SAG7C,qBAAKU,UAAU,YAAYE,KAAK,QAAhC,SACG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGJ,KAAI,SAACK,GAAD,MAAa,CACnC,uBACEC,KAAK,QACLJ,UAAU,YACVK,aAAa,MACblB,KAAI,mBAAcc,EAAOF,SAASV,OAA9B,YAAwCc,GAC5CG,GAAE,mBAAcL,EAAOF,SAASV,OAA9B,YAAwCc,GAC1CI,QAAS,kBAAON,EAAOX,MAAQa,KAEjC,uBACEH,UAAU,0BACVQ,QAAO,mBAAcP,EAAOF,SAASV,OAA9B,YAAwCc,GAFjD,SAIGA,gBAMX,yBAAQH,UAAU,aAAlB,UACE,qBAAKS,IAAKC,EAAMV,UAAU,WAAWW,IAAI,SACzC,sCACO,+CADP,0BAGA,mBACEX,UAAU,WACVY,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,gCCpCOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82725267.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export class QuizDto {\r\n  title!: string;\r\n  description!: string;\r\n  groups!: GroupDto[];\r\n}\r\nexport class GroupDto {\r\n  name!: string;\r\n  questions!: QuestionDto[];\r\n}\r\n\r\nexport class QuestionDto {\r\n  number!: number;\r\n  value!: string;\r\n}\r\n\r\nexport class AnswerVm {\r\n  question!: QuestionDto;\r\n  value?: number;\r\n}\r\n\r\nexport class QuizStorrage {\r\n  static get test(): QuizDto {\r\n    return {\r\n      title: \"test title\",\r\n      description: \"test descr\",\r\n      groups: [\r\n        {\r\n          name: \"group 1\",\r\n          questions: [\r\n            {\r\n              number: 1,\r\n              value: \"first q\",\r\n            },\r\n            {\r\n              number: 2,\r\n              value: \"second q\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: \"group 2\",\r\n          questions: [\r\n            {\r\n              number: 3,\r\n              value: \"third q\",\r\n            },\r\n            {\r\n              number: 4,\r\n              value: \"fourth q\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { AnswerVm, QuizDto, QuizStorrage } from \"./quizStorrage\";\n\nfunction App() {\n  const quiz = QuizStorrage.test;\n  const answers = quiz.groups\n    .flatMap((g) => g.questions)\n    .sort((q) => q.number)\n    .map<AnswerVm>((q) => ({\n      question: q,\n    }));\n\n  return (\n    <div className=\"App\">\n      {answers.map((answer) => (\n        <div\n          className=\"d-flex flex-column\n       justify-content-center align-items-center\"\n        >\n          <h3>\n            {answer.question.number}. {answer.question.value}\n          </h3>\n\n          <div className=\"btn-group\" role=\"group\">\n            {[1, 2, 3, 4, 5, 6].map((ans_val) => [\n              <input\n                type=\"radio\"\n                className=\"btn-check\"\n                autoComplete=\"off\"\n                name={`btnradio_${answer.question.number}_${ans_val}`}\n                id={`btnradio_${answer.question.number}_${ans_val}`}\n                onClick={() => (answer.value = ans_val)}\n              ></input>,\n              <label\n                className=\"btn btn-outline-primary\"\n                htmlFor={`btnradio_${answer.question.number}_${ans_val}`}\n              >\n                {ans_val}\n              </label>,\n            ])}\n          </div>\n        </div>\n      ))}\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}